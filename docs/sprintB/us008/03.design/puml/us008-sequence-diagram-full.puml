@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US008 - Produce a list of vehicles needing maintenance

autonumber

actor "VFM" as Employee
participant ":ListVehiclesNeedingMaintenanceUI" as UI
participant ":ListVehiclesNeedingMaintenanceController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "vehicleRepository:\nVehicleRepository" as VehicleRepository
participant "maintenanceRepository:\nMaintenanceRepository" as MaintenanceRepository
participant "vehicle\n:Vehicle" as Vehicle
participant "vehiclesNeedingMaintenanceList\nList<Vehicle>" as vehiclesNeedingMaintenanceList

activate Employee

    Employee -> UI : asks to produce a list of the vehicles needing maintenance
    activate UI

    UI -> CTRL : createList()
    activate CTRL
    CTRL -> VehicleRepository : createList()
    activate VehicleRepository
    VehicleRepository -> vehiclesNeedingMaintenanceList** : createList()
    deactivate VehicleRepository
    deactivate CTRL

    UI -> CTRL : getVehiclesList()
    activate CTRL
    CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton
    RepositorySingleton --> CTRL : repositories
    deactivate RepositorySingleton

    CTRL -> PLAT : getVehicleRepository()
    activate PLAT
    PLAT --> CTRL : vehicleRepository
    deactivate PLAT

    CTRL -> VehicleRepository : getVehiclesList()
    activate VehicleRepository
    VehicleRepository --> CTRL : vehiclesList
    deactivate VehicleRepository
    CTRL --> UI : vehiclesList
    deactivate CTRL

    loop until end of vehicles list
    UI --> Employee : requests to update the current kms of the vehicle
    deactivate UI
    Employee -> UI : enters the current kms of the vehicle
    activate UI
    UI -> CTRL : updateVehicleKms(vehiclePlate, kms)
    activate CTRL
    CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton
    RepositorySingleton --> CTRL : repositories
    deactivate RepositorySingleton
    CTRL -> PLAT : getVehicleRepository()
    activate PLAT
    PLAT --> CTRL : vehicleRepository
    deactivate PLAT
    CTRL -> VehicleRepository : updateVehicleKms(vehiclePlate, kms)
    activate VehicleRepository
    VehicleRepository -> Vehicle : updateVehicleKms(vehiclePlate, kms)
    activate Vehicle
    Vehicle --> VehicleRepository : vehicle
    deactivate Vehicle
    VehicleRepository --> CTRL : vehicle
    deactivate VehicleRepository
    CTRL --> UI : vehicle
    deactivate CTRL
    UI -> CTRL : getLastMaintenance(vehiclePlate)
    activate CTRL
    CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton
    RepositorySingleton --> CTRL : repositories
    deactivate RepositorySingleton
    CTRL -> PLAT : getMaintenanceRepository()
    activate PLAT
    PLAT --> CTRL : maintenanceRepository
    deactivate PLAT
    CTRL -> MaintenanceRepository : getLastMaintenance(vehiclePlate)
    activate MaintenanceRepository
    MaintenanceRepository --> CTRL : lastMaintenance
    deactivate MaintenanceRepository
    CTRL --> UI : lastMaintenance
    deactivate CTRL
    UI -> CTRL : calculateNextMaintenance(vehicle, lastMaintenance)
    activate CTRL
    CTRL -> CTRL : needsMaintenance = calculateNextMaintenance(vehicle, lastMaintenance)
    CTRL --> UI : needsMaintenance
    deactivate CTRL
    opt needsMaintenance = true
        UI -> CTRL : addVehicleToList(vehicle)
        activate CTRL
        CTRL -> vehiclesNeedingMaintenanceList : addVehicleToList(vehicle)
        activate vehiclesNeedingMaintenanceList
        vehiclesNeedingMaintenanceList --> CTRL : vehiclesNeedingMaintenanceList
        deactivate vehiclesNeedingMaintenanceList
        CTRL --> UI : vehiclesNeedingMaintenanceList
        deactivate CTRL
    end
    end

    UI --> Employee : shows list of vehicles needing maintenance
    deactivate UI

deactivate Employee
@enduml