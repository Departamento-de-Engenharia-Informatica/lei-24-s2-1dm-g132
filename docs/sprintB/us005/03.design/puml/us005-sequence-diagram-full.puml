@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources Manager" as HRM
participant ":GenerateTeamUI" as UI
participant ":GenerateTeamController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "skillRepository:\nSkillRepository" as SkillRepository
participant "selectedSkillsList\nList<Skill>" as selectedSkillsList
participant "collaboratorRepository:\nCollaboratorRepository" as CollaboratorRepository
participant "tempCollaboratorList:\nList<Collaborator>" as tempCollaboratorList
participant "collaborator\n:Collaborator" as Collab
participant "teamRepository:\nTeamRepository" as TeamRepository
participant "team\n:Team" as Team
participant "team\n:Team" as TEAM


activate HRM

        HRM -> UI : asks for a team proposal

        activate UI

            UI -> CTRL** : create

            UI --> HRM : asks for minimum and maximum team size

        deactivate UI

        HRM -> UI : enters minimum and maximum team size

        activate UI

            UI -> CTRL : getSkills()
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getSkillRepository()
                activate PLAT

                    PLAT --> CTRL: skillRepository
                deactivate PLAT

                CTRL -> SkillRepository : getSkills()
                activate SkillRepository

                    SkillRepository --> CTRL : skillList
                deactivate SkillRepository


                CTRL -> SkillRepository : createSelectedSkillsList()
                activate SkillRepository

                    SkillRepository -> selectedSkillsList** : create()
                    deactivate SkillRepository

                CTRL --> UI : skillList

            deactivate CTRL

            loop while continues

            UI --> HRM : shows skill list and asks to select one
        deactivate UI

    HRM -> UI : selects a skill
    activate UI

    UI -> CTRL : addSelectedSkillName(skillName)
        activate CTRL

            CTRL -> SkillRepository: addSelectedSkill(skillName)
            activate SkillRepository

                SkillRepository -> SkillRepository: getSkillByName(skillName)
                activate SkillRepository

                SkillRepository --> SkillRepository: skill
                deactivate SkillRepository

                SkillRepository -> selectedSkillsList : add(skill)
                activate selectedSkillsList

                deactivate selectedSkillsList

                deactivate SkillRepository

            deactivate CTRL

        UI --> HRM : asks to continue

    deactivate UI

    HRM -> UI : answers positively or negatively
    activate UI

            end loop

        UI -> CTRL : generateTeamProposal(minCollab, maxCollab)
        activate CTRL

            CTRL -> CTRL : getSelectedSkillsList()
                activate CTRL

                CTRL -> SkillRepository : getSelectedSkillsList()
                activate SkillRepository

                SkillRepository --> CTRL : selectedSkillsList
                deactivate SkillRepository

                CTRL --> CTRL : selectedSkillsList
                deactivate CTRL

            CTRL -> CTRL : createAvailableCollaboratorsList()
            activate CTRL


            CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getCollaboratorRepository()
                activate PLAT

                     PLAT --> CTRL: collaboratorRepository
            deactivate PLAT

            CTRL -> CollaboratorRepository : createTempCollaboratorList()
            activate CollaboratorRepository

                CollaboratorRepository -> tempCollaboratorList** : clone(collaboratorList)

                CollaboratorRepository --> CTRL : tempCollaboratorList

                deactivate CollaboratorRepository

                CTRL -> PLAT : getTeamRepository()
                activate PLAT

                    PLAT --> CTRL : teamRepository
                deactivate PLAT

            CTRL -> TeamRepository : removeUnavailableCollaborators(tempCollaboratorList)
                activate TeamRepository

                    loop for each team

                    TeamRepository -> Team: removeUnavailableCollaborators(tempCollaboratorList)
                    activate Team

                        loop for each collaborator of the team

                        Team -> tempCollaboratorList : remove(collaborator)
                        activate tempCollaboratorList

                        deactivate tempCollaboratorList

                        end loop

                    deactivate Team

                    end loop


                deactivate TeamRepository

            deactivate CTRL

            CTRL -> CTRL : selectCollaboratorsForTeam(selectedSkillsList, minCollab, maxCollab)
            activate CTRL

                CTRL -> CollaboratorRepository : generateTeam(selectedSkillsList, minCollab, maxCollab)
                activate CollaboratorRepository

                    loop for each available collaborator in tempCollaboratorList
                    CollaboratorRepository -> Collab : res = teamDefinitionCriteria(selectedSkillsList, minCollab, maxCollab)
                    activate Collab

                    deactivate Collab

                    opt res == false

                    CollaboratorRepository -> tempCollaboratorList : remove(collaborator)
                    activate tempCollaboratorList

                    deactivate tempCollaboratorList

                    end opt

                    end loop

                    CollaboratorRepository --> CTRL : tempCollaboratorList
                deactivate CollaboratorRepository

                CTRL --> CTRL : tempCollaboratorList
            deactivate CTRL

            CTRL --> UI : tempCollaboratorList
        deactivate CTRL

        UI --> HRM : shows a team proposal
    deactivate UI

    HRM -> UI : accepts or refuses team proposal
    activate UI

        UI -> CTRL : registerTeam(tempCollaboratorList)
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

                PLAT --> CTRL : teamRepository
            deactivate PLAT

            CTRL -> TeamRepository : registerTeam(tempCollaboratorList)
            activate TeamRepository

                TeamRepository -> TEAM** : create(tempCollaboratorList)
                TeamRepository -> TeamRepository : addTeam(team)
                activate TeamRepository
                TeamRepository --> TeamRepository
                deactivate TeamRepository

                TeamRepository --> CTRL : team
                deactivate TeamRepository

            CTRL --> UI : team

            deactivate CTRL
            UI --> HRM: displays operation result
    deactivate UI

deactivate HRM


@enduml