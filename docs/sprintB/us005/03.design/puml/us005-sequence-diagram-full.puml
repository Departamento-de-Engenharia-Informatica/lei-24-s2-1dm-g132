@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources Manager" as HRM
participant ":GenerateTeamUI" as UI
participant ":GenerateTeamController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "skillRepository:\nSkillRepository" as SkillRepository
participant "collaboratorRepository:\nCollaboratorRepository" as CollaboratorRepository
participant "collaborator\n:Collaborator" as Collab
participant "teamRepository:\nTeamRepository" as TeamRepository
participant "team\n:Team" as Team
participant "team\n:Team" as TEAM


activate HRM

        HRM -> UI : asks for a team proposal

        activate UI

            UI -> CTRL** : create

            UI --> HRM : asks for minimum and maximum team size

        deactivate UI

        HRM -> UI : enters minimum and maximum team size

        activate UI

            UI -> CTRL : getSkills()
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getSkillRepository()
                activate PLAT

                    PLAT --> CTRL: skillRepository
                deactivate PLAT

                CTRL -> SkillRepository : getSkills()
                activate SkillRepository

                    SkillRepository --> CTRL : skillList
                deactivate SkillRepository

                CTRL --> UI : skillList
            deactivate CTRL

            loop while continues

            UI --> HRM : shows skill list and asks to select one
        deactivate UI

    HRM -> UI : selects a skill
    activate UI

        UI --> HRM : asks to continue

    deactivate UI

    HRM -> UI : answers positively or negatively
    activate UI

            end loop

        UI -> CTRL : generateTeamProposal(minCollab, maxCollab, skillNames)
        activate CTRL

        loop for each skillName

            CTRL -> CTRL : getSkillByName(skillName)
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getSkillRepository()
                activate PLAT

                    PLAT -> CTRL : skillRepository
                deactivate PLAT

                CTRL -> SkillRepository : getSkillByName(skillName)
                activate SkillRepository

                    SkillRepository --> CTRL : skill
                deactivate SkillRepository
                    CTRL --> CTRL : skill
            deactivate CTRL

            end loop

            CTRL -> CTRL : checkAvailableCollaborators()
            activate CTRL


            CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getCollaboratorRepository()
                activate PLAT

                     PLAT --> CTRL: collaboratorRepository
            deactivate PLAT

            CTRL -> CollaboratorRepository : getCollaborators()
                activate CollaboratorRepository

                    CollaboratorRepository --> CTRL : collaboratorList
                deactivate CollaboratorRepository

                CTRL -> PLAT : getTeamRepository()
                activate PLAT

                    PLAT --> CTRL : teamRepository
                deactivate PLAT

            CTRL -> TeamRepository : checkAvailableCollaborators(collaboratorList)
                activate TeamRepository

                    loop for each team

                    TeamRepository -> Team: removeUnavailableCollaborators(collaboratorList)
                    activate Team

                        Team --> TeamRepository : collaboratorList
                    deactivate Team

                    end loop

                    TeamRepository --> CTRL : availableCollaborators
                deactivate TeamRepository

                CTRL --> CTRL : availableCollaborators
            deactivate CTRL

            CTRL -> CTRL : selectCollaboratorsForTeam(availableCollaborators, skills)
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getCollaboratorRepository()
                activate PLAT

                    PLAT --> CTRL: collaboratorRepository
                deactivate PLAT

                CTRL -> CollaboratorRepository : selectCollaboratorsForTeam(availableCollaborators, skills)
                activate CollaboratorRepository

                    loop for each available collaborator
                    CollaboratorRepository -> Collab : evaluateCollaborator(skills)
                    activate Collab

                        Collab --> CollaboratorRepository : evaluation
                    deactivate Collab

                    CollaboratorRepository --> CTRL : selectedCollaborators
                deactivate CollaboratorRepository

                CTRL --> CTRL : selectedCollaborators
            deactivate CTRL

            CTRL --> UI : selectedCollaborators
        deactivate CTRL

        UI --> HRM : shows a team proposal
    deactivate UI

    HRM -> UI : accepts or refuses team proposal
    activate UI

        UI -> CTRL : registerTeam(selectedCollaborators)
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

            CTRL -> PLAT : getTeamRepository()
            activate PLAT

                PLAT --> CTRL : teamRepository
            deactivate PLAT

            CTRL -> TeamRepository : registerTeam(selectedCollaborators)
            activate TeamRepository

                TeamRepository -> TEAM** : create(selectedCollaborators)
                TeamRepository -> TeamRepository : add(team)
                activate TeamRepository
                TeamRepository --> TeamRepository
                deactivate TeamRepository

                TeamRepository --> CTRL : team
                deactivate TeamRepository

            CTRL --> UI : team

            deactivate CTRL
            UI --> HRM: displays operation result
    deactivate UI

deactivate HRM


@enduml