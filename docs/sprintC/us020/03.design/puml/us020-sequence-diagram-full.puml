@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":RegisterGreenSpaceUI" as UI
participant ":RegisterGreenSpaceController" as CTRL
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSION
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "GreenSpaceRepository:\nGreenSpaceRepository" as GreenSpaceRepository
participant "GreenSpace\n:GreenSpace" as GreenSpace
participant "GreenSpaceMapper\n:GreenSpaceMapper" as GreenSpaceMapper
participant "GreenSpaceList\n:List<GreenSpace>" as GreenSpaceList


activate GSM

        GSM -> UI : asks to Register Green Space

        activate UI

        UI -> CTRL** : Register

        UI ->GSM : Request Green Space Data

        deactivate UI

        GSM -> UI : Submit Green Space Data

        activate UI

        UI -> CTRL : Green space (name, area, type, adress)

        activate CTRL

        CTRL -> CTRL : getGreenSpaceByName(name)

        CTRL -> _APP : getInstance()

        activate _APP

        _APP -> CTRL : appSession

        deactivate _APP

        CTRL -> APP : getCurrentSession()

        activate APP

        APP -> CTRL : currentSession

        deactivate APP



        CTRL -> RepositorySingleton : getInstance()

        activate RepositorySingleton

        RepositorySingleton -> CTRL : getGreenSpaceRepository()

        deactivate RepositorySingleton

        CTRL -> PLAT : getGreenSpaceName()

                activate PLAT

                PLAT -> CTRL : GreenSpaceName

                deactivate PLAT

        CTRL -> GreenSpaceRepository : getGreenSpaceByName(name)

        activate GreenSpaceRepository

        GreenSpaceRepository -> GreenSpaceList : getGreenSpace()

        activate GreenSpaceList

        GreenSpaceList -> GreenSpaceRepository : GreenSpaceList

        deactivate GreenSpaceList

        GreenSpaceRepository -> GreenSpaceList** : Create

        loop for each greenSpace in GreenSpaceList

        GreenSpaceRepository -> GreenSpaceMapper : dtoGreenSpaces(GreenSpace)

        activate GreenSpaceMapper

        GreenSpaceMapper -> GreenSpaceList : greenSpace=get()

        activate GreenSpaceList

        deactivate GreenSpaceList

        GreenSpaceMapper -> GreenSpaceMapper : greenSpaceDto(greenSpace) = dto(greenSpace)

        GreenSpaceMapper -> greenSpaceDto** :create greenSpaceDto()

       GreenSpaceMapper-> GreenSpaceList : add(greenSpaceDto)

       activate GreenSpaceList

       deactivate GreenSpaceList

       end

       GreenSpaceMapper -> GreenSpaceRepository : greenSpacedto

       deactivate GreenSpaceMapper

        GreenSpaceRepository -> CTRL : GreenSpacedto

        deactivate GreenSpaceRepository

        CTRL -> GreenSpaceRepository : RegisterGreenSpace(name, area, type, adress)

        activate GreenSpaceRepository

        GreenSpaceRepository -> GreenSpace** : createGreenSpace(name, area, type, adress)


        GreenSpaceRepository -> GreenSpaceRepository : saveGreenSpace(GreenSpace)

        GreenSpaceRepository -> GreenSpaceRepository : VerifyGreenSpace(GreenSpace)

        GreenSpaceRepository -> CTRL : GreenSpace

        deactivate GreenSpaceRepository

        CTRL -> UI : GreenSpace

        deactivate CTRL

        UI -> GSM : dysplay Green Space

        deactivate UI

        deactivate GSM

@enduml
        UI -> CTRL : getTasks(teamsDTO, startDate, endDate)
            activate CTRL

        CTRL -> TaskRepository : getTasks(teamsDTO, startDate, endDate)
            activate TaskRepository

            TaskRepository -> TasksList ** : create()
            loop for each task
                opt assignedTeam exists in teamsDTO
                    TaskRepository -> Task : betweenDates(startDate, endDate)
                    activate Task

                    Task --> TaskRepository : true/false
                    deactivate Task

                    opt betweenDates == true
                        TaskRepository -> TasksList : add(task)
                        activate TasksList
                        deactivate TasksList
                    end opt

                end opt

            end loop

            TaskRepository --> CTRL : tasks
            deactivate TaskRepository

        CTRL -> TaskMapper : toDTO(tasks)
        activate TaskMapper

        TaskMapper -> TasksListDTO ** : create()
        loop for each task in TaskList
        TaskMapper -> TasksList : obj = get(i)
        activate TasksList
        deactivate TasksList

        TaskMapper -> TaskMapper : objDTO = toDTO(obj)
        activate TaskMapper

        TaskMapper -> TaskDTO ** : create(...)
        deactivate TaskMapper

        TaskMapper -> TasksListDTO : add(objDTO)
        activate TasksListDTO
        deactivate TasksListDTO

        end loop

        TaskMapper --> CTRL : tasksDTO
        deactivate TaskMapper

    CTRL --> UI : tasksDTO
    deactivate CTRL