@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US028 - Consult the tasks assigned to a collaborator

autonumber

actor "Collaborator" as Employee
participant ":ConsultTasksUI" as UI
participant ":ConsultTasksController" as CTRL
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSION
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "taskRepository\n:TaskRepository" as TaskRepository
participant "taskDTO\n:TaskDTO" as TaskDTO

activate Employee

    Employee -> UI : asks to consult the tasks assigned to collaborator
    activate UI

    UI -> CTRL** : create

    UI --> Employee : requests first date
    deactivate UI

    Employee -> UI : types first date
    activate UI

    UI --> Employee : requests second date
    deactivate UI

    Employee -> UI : types second date
    activate UI

    UI --> Employee : asks if collaborator wants to view tasks filtered by status
    deactivate UI

    Employee -> UI : answers yes or no
    activate UI

    UI -> CTRL : getEmailCollaborator()
    activate CTRL

    CTRL -> _APP : getInstance()
    activate _APP

    _APP --> CTRL : appSession
    deactivate _APP

    CTRL -> APP : getCurrentSession()
    activate APP

    APP --> CTRL : currentSession
    deactivate APP

    CTRL -> SESSION : email = getUser(email)
    activate SESSION

    SESSION --> CTRL : email
    deactivate SESSION

    CTRL --> UI : email
    deactivate CTRL

    UI -> CTRL : getTasksByCollaborator(email)
    activate CTRL

    CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton

    RepositorySingleton --> CTRL: repositories
    deactivate RepositorySingleton

    CTRL -> PLAT : getTaskRepository()
    activate PLAT

    PLAT --> CTRL: taskRepository
    deactivate PLAT

    CTRL -> TaskRepository : getTasksByCollaborator(email)
    activate TaskRepository
    TaskRepository -> TaskRepository : getTasksByCollaborator(email)
    activate TaskRepository
    loop for each task
    TaskRepository -> TaskDTO : hasCollaboratorEmail(email)
    activate TaskDTO
    TaskDTO --> TaskRepository : true/false
    deactivate TaskDTO
    end
    TaskRepository --> TaskRepository : tasksByCollaborator
    deactivate TaskRepository


    TaskRepository --> CTRL : tasksByCollaborator
    deactivate TaskRepository

    CTRL --> UI : tasksByCollaborator
    deactivate CTRL


    alt answer is yes
        UI -> CTRL : consultTasksByStatus(email, tasksByCollaborator)
        activate CTRL

        CTRL -> TaskRepository : consultTasksByStatus(email, tasksByCollaborator)
        activate TaskRepository

        TaskRepository --> TaskRepository : getTasksByStatus(email, tasksByCollaborator)
        TaskRepository --> TaskRepository : orderTasksByDate()
        TaskRepository --> CTRL : tasks
        deactivate TaskRepository

        CTRL --> UI : tasks
        deactivate CTRL
    end

    alt answer is no
        UI -> CTRL : consultTasks(email, tasksByCollaborator)
        activate CTRL

        CTRL -> TaskRepository : consultTasks(email, tasksByCollaborator)
        activate TaskRepository

        TaskRepository --> TaskRepository : orderTasksByDate()
        TaskRepository --> CTRL : tasks
        deactivate TaskRepository

        CTRL --> UI : tasks
    end


    UI --> Employee : shows tasks assigned to collaborator \nbetween two dates requested
    deactivate UI

deactivate Employee
@enduml