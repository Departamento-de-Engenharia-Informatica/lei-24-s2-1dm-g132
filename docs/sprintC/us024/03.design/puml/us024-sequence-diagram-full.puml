@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US024 - Postpone an entry in the agenda

autonumber

actor "GSM" as Employee
participant ":PostponeEntryUI" as UI
participant ":PostponeEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "greenSpaceRepository\n:GreenSpaceRepository" as GreenSpaceRepository
participant "taskRepository\n:TaskRepository" as TaskRepository
participant "greenSpaceMapper\n:GreenSpaceMapper" as GreenSpaceMapper
participant "greenSpaceList\n:List<GreenSpace>" as GreenSpaceList
participant "greenSpaceDtoList\n:List<GreenSpaceDto>" as GreenSpaceDtoList
participant "greenSpaceDto\n:GreenSpaceDto" as GreenSpaceDto
participant "taskMapper\n:TaskMapper" as TaskMapper
participant "taskList\n:List<Task>" as TaskList
participant "taskDtoList\n:List<TaskDto>" as TaskDtoList
participant "taskDto\n:TaskDto" as TaskDto

activate Employee

    Employee -> UI : asks to postpone an entry in the agenda
    activate UI

    UI -> CTRL** : create

                UI -> CTRL : getGreenSpaces()
                activate CTRL

                    CTRL -> RepositorySingleton : getInstance()
                    activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                    deactivate RepositorySingleton

                    CTRL -> PLAT : getGreenSpaceRepository()
                    activate PLAT

                    PLAT --> CTRL: greenSpaceRepository
                    deactivate PLAT

                    CTRL -> GreenSpaceRepository : getGreenSpaces()
                    activate GreenSpaceRepository

                    GreenSpaceRepository -> GreenSpaceList : getGreenSpaces()
                    activate GreenSpaceList

                    GreenSpaceList --> GreenSpaceRepository : greenSpaces
                    deactivate GreenSpaceList

                    GreenSpaceRepository -> GreenSpaceMapper : toDTO(greenSpaces)
                    activate GreenSpaceMapper

                    GreenSpaceMapper -> GreenSpaceDtoList ** : create()

                    loop for each greenSpace in list
                    GreenSpaceMapper -> GreenSpaceList : greenSpace = get(i)
                    activate GreenSpaceList

                    deactivate GreenSpaceList

                    GreenSpaceMapper -> GreenSpaceMapper : greenSpaceDTO = toDTO(greeenSpace)
                    activate GreenSpaceMapper

                    GreenSpaceMapper --> GreenSpaceDto ** : create()
                    deactivate GreenSpaceMapper

                    GreenSpaceMapper -> GreenSpaceDtoList : add(greenSpaceDTO)
                    activate GreenSpaceDtoList
                    deactivate GreenSpaceDtoList

                    end

                    GreenSpaceMapper --> GreenSpaceRepository : greenSpacesDTO
                    deactivate GreenSpaceMapper

                    GreenSpaceRepository --> CTRL : greenSpacesDTO
                    deactivate GreenSpaceRepository


                    CTRL --> UI : greenSpacesDTO
                deactivate CTRL

    UI --> Employee : shows list of green spaces to select one
    deactivate UI

    Employee -> UI : selects the green space
    activate UI

        UI -> CTRL : getTasksByGreenSpace(greenSpaceDTO)
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

            RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> PLAT : getTaskRepository()
            activate PLAT

            PLAT --> CTRL: taskRepository
            deactivate PLAT

            CTRL -> TaskRepository : getTasksByGreenSpace(greenSpaceDTO)
            activate TaskRepository

            TaskRepository -> TaskList : getTasksByGreenSpace(greenSpaceDTO)
            activate TaskList

            TaskList --> TaskList : getTasksUndone()

            TaskList --> TaskRepository : tasks
            deactivate TaskList

            TaskRepository -> TaskMapper : toDTO(tasks)
            activate TaskMapper

            TaskMapper -> TaskDtoList ** : create()

            loop for each Task in list

            TaskMapper -> TaskList : task = get(i)
            activate TaskList
            deactivate TaskList

            TaskMapper -> TaskMapper : taskDTO = toDTO(task)
            activate TaskMapper

            TaskMapper --> TaskDto ** : create()
            deactivate TaskMapper

            TaskMapper -> TaskDtoList : add(taskDTO)
            activate TaskDtoList
            deactivate TaskDtoList


            end
            TaskMapper --> TaskRepository : tasksByGreenSpaceDTO
            deactivate TaskMapper


            TaskRepository --> CTRL : tasksByGreenSpaceDTO
            deactivate TaskRepository

            CTRL --> UI : tasksByGreenSpaceDTO
        deactivate CTRL

    UI --> Employee : shows list of entries in the agenda of the selected green space
    deactivate UI

    Employee -> UI : selects one entry
    activate UI

    UI --> Employee : requests the new date
    deactivate UI

    Employee -> UI : types the new date
    activate UI

    UI -> CTRL : postponeEntry(taskDTO, newDate)
    activate CTRL

    CTRL --> CTRL : validateNewDate(newDate)
    CTRL -> TaskRepository : postponeEntry(taskDTO, newDate)
    activate TaskRepository

    TaskRepository -> TaskDto : startingDate = newDate
    activate TaskDto
    deactivate TaskDto

    deactivate TaskRepository
    deactivate CTRL


    UI --> Employee : displays operation success
    deactivate UI

deactivate Employee
@enduml