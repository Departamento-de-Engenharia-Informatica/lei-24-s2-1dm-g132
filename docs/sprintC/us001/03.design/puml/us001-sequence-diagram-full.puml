@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "HRM" as USER

participant ":RegisterSKIllUI" as RegisterSkillUI
participant ":RegisterSkillController" as RegisterSkillController
participant "Repositories" as Repositories
participant "repositories\n:Repositories" as repRep
participant "SkillRepository" as skillRepository
participant "Skill" as skill

activate USER
USER -> RegisterSkillUI : Requeste to register a skill
activate RegisterSkillUI
RegisterSkillUI -> RegisterSkillController** : Create
RegisterSkillUI -> USER : requests skill data
deactivate RegisterSkillUI
USER -> RegisterSkillUI : Types skill details (name)
activate RegisterSkillUI
RegisterSkillUI -> RegisterSkillUI : Keeps and stores that data
RegisterSkillUI -> USER : Shows the thyped data and a comfirmation requests
deactivate RegisterSkillUI
USER -> RegisterSkillUI : Confirms the data
activate RegisterSkillUI
RegisterSkillUI -> RegisterSkillController : Registerskill()
activate RegisterSkillController
RegisterSkillController -> Repositories : getinstance()
activate Repositories
Repositories -> RegisterSkillController : Repositories
deactivate Repositories
RegisterSkillController -> repRep : getSkillRepository()
activate repRep
repRep -> RegisterSkillController : SkillRepository
deactivate repRep
RegisterSkillController -> SkillRepository: RegisterSkill(name)
activate SkillRepository
SkillRepository -> Skill** : RegisterSkill(name)
SkillRepository -> SkillRepository : Save skill
SkillRepository -> RegisterSkillController : skill
deactivate SkillRepository
RegisterSkillController -> RegisterSkillUI : skill
deactivate RegisterSkillController
RegisterSkillUI -> USER : Shows the registered skill
deactivate RegisterSkillUI


@enduml

