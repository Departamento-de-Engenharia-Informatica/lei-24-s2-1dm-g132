@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

Package UI {
class AssignTeamUI
{

}
}
Package Core{
Package Controller {
class AssignTeamController
{
    + AssignTeamController()
    + getAgendaEntries()
    + getTeams()
    + getSelectedTask(i)
    + assignTeam(i)
}
}

Package Domain{
Package Repository{
class Repositories
{
    - Repositories()
    + getInstance() : Repositories
    + getAgenda()
    + getTeamRepository()
}

class Agenda
{
    - List<Task> entriesList
    - List<Task> freeAgendaEntriesList
    - List<Task> teamSchedule
    + getAgendaEntries(email)
    + getSelectedTask(i)
    + checkTeamSchedule(selectedTeam, selectedTask)
    + assignTeam(selectedTask, selectedTeam)
}

class TeamRepository
{
    - List<Team> teamsList
    + getTeams()
    + getSelectedTeam(i)
}
}

Package Model {
class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class Team
{
    - List<Collaborator> collaborators
}

class GreenSpace
{
    - String name
    - String type
    - int area
    - String address
    - String gsmEmail
    + hasUserEmail(email)
}

class Task
{
    - String title
    - String description
    - int expectedDuration
    - Calendar startingDate
    + hasTeam()
    + hasUserEmail(email)
    + belongsToTeam(selectedTeam)
    + hasConflict(selectedTask)
    + assignTeam(selectedTeam)
}

enum DegreeOfUrgency
{
    Low
    Medium
    High
}

enum TaskStatus
{
    Pending
    Processed
    Planned
    Postponed
    Canceled
    Done
}

interface EmailGenerator
{
    + sendEmail(title, startingDate, selectedTeam)
}
}
}

Package Mapper {
class TaskMapper
{
    - List<TaskDto> freeAgendaEntriesListDto
    + toDTO(freeAgendaEntriesList)
    - toDTO(obj)
}

class TeamMapper
{
    - List<TeamDto> teamsListDto
    + toDTO(teamsList)
    - toDTO(obj)
}

Package DTO {
class TaskDto
{
    - String title
    - String description
    - String degreeOfUrgency
    - int expectedDuration
    - Calendar startingDate
    + TaskDto(title, description, degreeOfUrgency, expectedDuration, selectedGreenSpace, startingDate)
}

class GreenSpaceDto
{
    - String name
    - String type
    - int area
    - String address
    + GreenSpaceDto(name, type, area, address)
}

class TeamDto
{
    - List<Collaborator> collaborators
    + TeamDto(collaborators)
}
}
}
}
Package ExternalModules{
class EmailThroughGmail
{
    + sendEmail(title, startingDate, selectedTeam)
}

class EmailThroughDEIService
{
    + sendEmail(title, startingDate, selectedTeam)
}
}

Task +-- DegreeOfUrgency
Task +-- TaskStatus

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

AssignTeamUI .> AssignTeamController

AssignTeamController .> Repositories : repositories

Repositories --> "1" TeamRepository
Repositories --> "1" Agenda

AssignTeamController ..> ApplicationSession
AssignTeamController ..> UserSession
ApplicationSession --> "1" UserSession : userSession
AssignTeamController ..> Agenda : agenda
AssignTeamController ..> TeamRepository : teamRepository
AssignTeamController ..> TaskMapper
AssignTeamController ..> TeamMapper

Agenda "1" --> "*" Task
TeamRepository "1" ---> "*" Team

TaskMapper ...> TaskDto
TaskMapper ..> Task

Task "*" --> "1" GreenSpace
TaskDto "*" --> "1" GreenSpaceDto

TeamMapper ..> TeamDto
TeamMapper ..> Team
TaskMapper ..> GreenSpaceDto

Task "*" --> "0..1" Team

Task "*" --> "1" EmailGenerator : makes use of

EmailThroughGmail ..|> EmailGenerator
EmailThroughDEIService ..|> EmailGenerator

@enduml