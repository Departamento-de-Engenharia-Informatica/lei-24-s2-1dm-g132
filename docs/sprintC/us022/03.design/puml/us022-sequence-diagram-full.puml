@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Green Space Manager" as GSM
participant ":AddEntryAgendaUI" as UI
participant ":AddEntryAgendaController" as CTRL
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSION
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "toDoList:\nToDoList" as ToDoList
participant "entriesList:\nList<Task>" as EntriesList
participant "greenSpace\n:GreenSpace" as greenSpace
participant ":TaskMapper" as TaskMapper
participant "associatedToDoEntriesList\nList<Task>" as associatedToDoEntriesList
participant "associatedToDoEntriesListDto\nList<TaskDto>" as associatedToDoEntriesListDto
participant "objDto\n:TaskDto" as taskDto
participant "agenda:\nAgenda" as Agenda
participant "task\n:Task" as Task

activate GSM

    GSM -> UI : asks to add a new entry to the Agenda
    activate UI

        UI --> CTRL** : create()
        UI -> CTRL : getToDoListEntries()
        activate CTRL

            CTRL -> _APP: getInstance()
                activate _APP
                    _APP -> CTRL: appSession
                deactivate _APP

                CTRL -> APP: getCurrentSession()
                activate APP

                    APP --> CTRL: currentSession
                deactivate APP

                CTRL -> SESSION: email = getUserEmail()
                activate SESSION

                    SESSION --> CTRL: email
                deactivate SESSION

            CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getToDoList()
                activate PLAT

                    PLAT --> CTRL : toDoList
                deactivate PLAT

                CTRL -> ToDoList : getToDoListEntries(email)
                activate ToDoList

                    ToDoList --> associatedToDoEntriesList** : create()

                    loop for each known Task

                        ToDoList -> EntriesList : entry = get(i)
                        activate EntriesList
                        deactivate EntriesList

                        ToDoList -> Task : pending = isPending()
                        activate Task
                        deactivate Task

                        ToDoList -> Task : associated = hasUserEmail(email)
                        activate Task

                            Task -> greenSpace : associated = hasUserEmail(email)
                            activate greenSpace
                            deactivate greenSpace

                        deactivate Task

                        opt pending == true && associated == true

                            ToDoList -> associatedToDoEntriesList : add(entry)
                            activate associatedToDoEntriesList
                            deactivate associatedToDoEntriesList

                        end opt

                    end loop

                    ToDoList --> CTRL : associatedToDoEntriesList
                deactivate ToDoList

                CTRL -> TaskMapper : toDTO(associatedToDoEntriesList)
                activate TaskMapper

                    TaskMapper --> associatedToDoEntriesListDto** : create()

                    loop for each object in associatedToDoEntriesList
                        TaskMapper -> associatedToDoEntriesList : obj = get(i)
                        activate associatedToDoEntriesList

                            deactivate associatedToDoEntriesList

                        TaskMapper -> TaskMapper : objDto = toDTO(obj)
                        activate TaskMapper

                            TaskMapper -> taskDto** :create(...)
                            deactivate TaskMapper

                        TaskMapper -> associatedToDoEntriesListDto : add(objDto)
                        activate associatedToDoEntriesListDto

                            deactivate associatedToDoEntriesListDto

                        end loop

                    TaskMapper --> CTRL : associatedToDoEntriesListDto
                    deactivate TaskMapper

                CTRL --> UI : associatedToDoEntriesListDto
                deactivate CTRL
            UI --> GSM : shows entries from the To-Do list and asks to select one
            deactivate UI

        GSM -> UI : selects an entry
        activate UI

            UI -> CTRL : getSelectedTask(i)
            activate CTRL

                CTRL -> ToDoList : getSelectedTask(i)
                activate ToDoList

                    ToDoList -> associatedToDoEntriesList : get(i)
                    activate associatedToDoEntriesList

                        associatedToDoEntriesList --> ToDoList : selectedTask

                    deactivate associatedToDoEntriesList

                    ToDoList -> Task : clone(selectedTask)
                    activate Task

                        Task --> ToDoList : selectedTaskClone
                    deactivate Task

                    ToDoList --> CTRL : selectedTaskClone
                    deactivate ToDoList

                deactivate CTRL

            UI --> GSM : requests a starting date
            deactivate UI

        GSM -> UI : introduces starting date
        activate UI

            UI -> CTRL : addEntry(startingDate)
            activate CTRL

                CTRL -> PLAT : getAgenda()
                activate PLAT

                    PLAT --> CTRL : agenda
                deactivate PLAT

                CTRL -> Agenda : addEntry(startingDate, selectedTaskClone)
                activate Agenda

                    Agenda -> Task : selectedTaskClone.setStartingDate(startingDate)
                    activate Task
                    deactivate Task

                    Agenda -> Agenda : add(selectedTaskClone)
                    activate Agenda

                        Agenda --> Agenda : selectedTaskClone
                    deactivate Agenda

                    Agenda --> CTRL : selectedTaskClone
                    deactivate Agenda

                CTRL --> UI : selectedTaskClone
                deactivate CTRL

            UI --> GSM : displays operation success
            deactivate UI

        deactivate GSM

@enduml